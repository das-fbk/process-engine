//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.09.01 at 03:11:37 PM CEST 
//

package eu.fbk.das.process.engine.api.jaxb;

import javax.xml.bind.annotation.XmlRegistry;

/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the eu.fbk.das.process.engine.api.jaxb
 * package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    /**
     * Create a new ObjectFactory that can be used to create new instances of
     * schema derived classes for package: eu.fbk.das.process.engine.api.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DomainProperty }
     * 
     */
    public DomainProperty createDomainProperty() {
	return new DomainProperty();
    }

    /**
     * Create an instance of {@link DomainProperty.State }
     * 
     */
    public DomainProperty.State createDomainPropertyState() {
	return new DomainProperty.State();
    }

    /**
     * Create an instance of {@link DomainPropertyEventType }
     * 
     */
    public DomainPropertyEventType createDomainPropertyEventType() {
	return new DomainPropertyEventType();
    }

    /**
     * Create an instance of {@link DomainProperty.Transition }
     * 
     */
    public DomainProperty.Transition createDomainPropertyTransition() {
	return new DomainProperty.Transition();
    }

    /**
     * Create an instance of {@link DomainPropertyStateType }
     * 
     */
    public DomainPropertyStateType createDomainPropertyStateType() {
	return new DomainPropertyStateType();
    }

    /**
     * Create an instance of {@link Composition }
     * 
     */
    public Composition createComposition() {
	return new Composition();
    }

    /**
     * Create an instance of {@link Composition.Constraints }
     * 
     */
    public Composition.Constraints createCompositionConstraints() {
	return new Composition.Constraints();
    }

    /**
     * Create an instance of {@link Composition.Fragments }
     * 
     */
    public Composition.Fragments createCompositionFragments() {
	return new Composition.Fragments();
    }

    /**
     * Create an instance of {@link Composition.Fragments.Fragment }
     * 
     */
    public Composition.Fragments.Fragment createCompositionFragmentsFragment() {
	return new Composition.Fragments.Fragment();
    }

    /**
     * Create an instance of {@link Composition.DomainProperties }
     * 
     */
    public Composition.DomainProperties createCompositionDomainProperties() {
	return new Composition.DomainProperties();
    }

    /**
     * Create an instance of {@link Composition.ControlFlowRequirements }
     * 
     */
    public Composition.ControlFlowRequirements createCompositionControlFlowRequirements() {
	return new Composition.ControlFlowRequirements();
    }

    /**
     * Create an instance of {@link Composition.Runtime.Fragments.Fragment }
     * 
     */
    public Composition.Runtime.Fragments.Fragment createCompositionRuntimeFragmentsFragment() {
	return new Composition.Runtime.Fragments.Fragment();
    }

    /**
     * Create an instance of
     * {@link Composition.Runtime.DomainProperties.DomainProperty }
     * 
     */
    public Composition.Runtime.DomainProperties.DomainProperty createCompositionRuntimeDomainPropertiesDomainProperty() {
	return new Composition.Runtime.DomainProperties.DomainProperty();
    }

    /**
     * Create an instance of {@link Composition.NextActions.Action }
     * 
     */
    public Composition.NextActions.Action createCompositionNextActionsAction() {
	return new Composition.NextActions.Action();
    }

    /**
     * Create an instance of
     * {@link Composition.Synchronization.Point.DomainProperty }
     * 
     */
    public Composition.Synchronization.Point.DomainProperty createCompositionSynchronizationPointDomainProperty() {
	return new Composition.Synchronization.Point.DomainProperty();
    }

    /**
     * Create an instance of {@link Composition.Constraints.Constraint }
     * 
     */
    public Composition.Constraints.Constraint createCompositionConstraintsConstraint() {
	return new Composition.Constraints.Constraint();
    }

    /**
     * Create an instance of {@link Composition.Fragments.Fragment.Assignment }
     * 
     */
    public Composition.Fragments.Fragment.Assignment createCompositionFragmentsFragmentAssignment() {
	return new Composition.Fragments.Fragment.Assignment();
    }

    /**
     * Create an instance of {@link Composition.DomainProperties.DomainProperty }
     * 
     */
    public Composition.DomainProperties.DomainProperty createCompositionDomainPropertiesDomainProperty() {
	return new Composition.DomainProperties.DomainProperty();
    }

    /**
     * Create an instance of {@link Composition.Synchronization }
     * 
     */
    public Composition.Synchronization createCompositionSynchronization() {
	return new Composition.Synchronization();
    }

    /**
     * Create an instance of {@link Composition.Runtime }
     * 
     */
    public Composition.Runtime createCompositionRuntime() {
	return new Composition.Runtime();
    }

    /**
     * Create an instance of {@link Composition.Runtime.DomainProperties }
     * 
     */
    public Composition.Runtime.DomainProperties createCompositionRuntimeDomainProperties() {
	return new Composition.Runtime.DomainProperties();
    }

    /**
     * Create an instance of {@link Composition.Runtime.Fragments }
     * 
     */
    public Composition.Runtime.Fragments createCompositionRuntimeFragments() {
	return new Composition.Runtime.Fragments();
    }

    /**
     * Create an instance of {@link Composition.Synchronization.Point }
     * 
     */
    public Composition.Synchronization.Point createCompositionSynchronizationPoint() {
	return new Composition.Synchronization.Point();
    }

    /**
     * Create an instance of {@link Composition.NextActions }
     * 
     */
    public Composition.NextActions createCompositionNextActions() {
	return new Composition.NextActions();
    }
    
    /**
     * Create an instance of {@link ScopeType }
     * 
     */
    public ScopeType createScopeType() {
        return new ScopeType();
    }    

}
