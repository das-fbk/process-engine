-------------------------------
--   C O M P O S I T I O N   --
-------------------------------
MODULE dn_main

---------------------
--   I N P U T S   --
---------------------
IVAR input:
{
UNDEF, service374_SMC_ActivateServiceRequest, service374_RESET, service375_SMC_SubscribeAndPay, service375_RESET, service375_SMC_MobilityCardRequest
};

-----------------------
--   O U T P U T S   --
-----------------------
IVAR output:
{
UNDEF, service374_SMC_ActivateServiceReply, service375_SMC_MobilityCardReply
};

-------------------------
--   S E R V I C E S   --
-------------------------
--	 service374
VAR service374: {ST2, ST1, ST0};
ASSIGN
next(service374) :=
case
(service374 = ST1 & output = service374_SMC_ActivateServiceReply): ST2;
(service374 = ST0 & input = service374_SMC_ActivateServiceRequest): ST1;
(service374 = ST2 & input = service374_RESET): ST0;
(service374 = ST1 & input = service374_RESET): ST0;
1:service374;
esac;
TRANS ( input = service374_SMC_ActivateServiceRequest) -> (service374 = ST0)
TRANS ( input = service374_RESET) -> (service374 = ST2 | service374 = ST1)
TRANS ( output = service374_SMC_ActivateServiceReply) -> (service374 = ST1)

--	 service375
VAR service375: {ST2, ST1, ST3, ST0};
ASSIGN
next(service375) :=
case
(service375 = ST0 & input = service375_SMC_MobilityCardRequest): ST1;
(service375 = ST1 & input = service375_RESET): ST0;
(service375 = ST2 & input = service375_RESET): ST0;
(service375 = ST2 & output = service375_SMC_MobilityCardReply): ST3;
(service375 = ST3 & input = service375_RESET): ST0;
(service375 = ST1 & input = service375_SMC_SubscribeAndPay): ST2;
1:service375;
esac;
TRANS ( input = service375_SMC_SubscribeAndPay) -> (service375 = ST1)
TRANS ( output = service375_SMC_MobilityCardReply) -> (service375 = ST2)
TRANS ( input = service375_RESET) -> (service375 = ST2 | service375 = ST1 | service375 = ST3)
TRANS ( input = service375_SMC_MobilityCardRequest) -> (service375 = ST0)

-----------------------
--   O B J E C T S   --
-----------------------
--	 HandlePayment
VAR HandlePayment: {PAYMENT_EXECUTED, INITIAL};
ASSIGN
next(HandlePayment) :=
case
(input = service375_SMC_SubscribeAndPay):{(PAYMENT_EXECUTED)};
1:HandlePayment;
esac;
--	 HandleSmartMobilityCard
VAR HandleSmartMobilityCard: {INITIAL, SUBSCRIPTION, CARD_RELEASED, SERVICE_ADDED};
ASSIGN
next(HandleSmartMobilityCard) :=
case
(HandleSmartMobilityCard = INITIAL & input = service375_SMC_SubscribeAndPay): SUBSCRIPTION;
(HandleSmartMobilityCard = CARD_RELEASED & output = service374_SMC_ActivateServiceReply): SERVICE_ADDED;
(HandleSmartMobilityCard = SUBSCRIPTION & output = service375_SMC_MobilityCardReply): CARD_RELEASED;
1:HandleSmartMobilityCard;
esac;
-----------------------------------
--   P R E C O N D I T I O N S   --
-----------------------------------
TRANS (input = service374_SMC_ActivateServiceRequest) -> ((((HandleSmartMobilityCard = CARD_RELEASED))))
TRANS (input = service375_SMC_MobilityCardRequest) -> ((((HandleSmartMobilityCard = INITIAL))))
TRANS (output = service375_SMC_MobilityCardReply) -> ((((HandleSmartMobilityCard = SUBSCRIPTION))))
-----------------------------
--   I N V A R I A N T S   --
-----------------------------
--	 Synchronicity
TRANS (1-(input = UNDEF)) + (1-(output = UNDEF)) = 1

---------------------------------------
--   S Y N C H R O N I Z A T I O N   --
---------------------------------------
DEFINE SYNC0 := ((HandleSmartMobilityCard in {SERVICE_ADDED}));
--	 Synchronicity enforcement
TRANS (service374 in {ST1}) -> (next(service374) != service374)
TRANS (service375 in {ST2}) -> (next(service375) != service375)
-------------------------------
--   C O N T R O L L E R S   --
-------------------------------
--	 Fault Controller
VAR FAULT_CONTROLLER: { START, STOP };
INIT FAULT_CONTROLLER = START

ASSIGN
next(FAULT_CONTROLLER) := 
case
(FAULT_CONTROLLER = START & FALSE): STOP;
1: FAULT_CONTROLLER;
esac;

TRANS (output != UNDEF | input != UNDEF) -> (FAULT_CONTROLLER != STOP)

-------------------------------------
--   I N I T I A L I Z A T I O N   --
-------------------------------------
INIT ((HandlePayment = INITIAL) & (HandleSmartMobilityCard = INITIAL))
INIT ((service374 = ST0) & (service375 = ST0))

-----------------
--   G O A L   --
-----------------
MODULE main
VAR dn_main : dn_main;

GOAL ONEOF(
(dn_main.SYNC0), 1;
(dn_main.FAULT_CONTROLLER = STOP), 0

)